@DEV = http://localhost:8000/

@domain = {{DEV}}
@jsonContentType = application/json
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmYWEwYTJkMjIxMzIxNTZiODM5NWM5YiIsImFjY291bnQiOiJob3JzZSBraXQxOTgyQGdtYWlsLmNvbSIsImF2YXRhciI6Imh0dHA6Ly9jbGlwYXJ0LWxpYnJhcnkuY29tL2ltYWdlcy82Y3BveTc4cmkucG5nIiwibmFtZSI6IlRvbWFzIGRlbW8wMDEiLCJpYXQiOjE2MDUyNDI3MzF9.pVUpStIUi1eQnAHZ63vLiE3KUNgLG5nFej6ZdhemrBg
# @token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Zjg2YzIzMjU5YjczZjVlNDBjMmZlZDQiLCJhY2NvdW50IjoidGhvbWFzbGluMDcxOEBnbWFpbC5jb20iLCJhdmF0YXIiOiJodHRwOi8vY2xpcGFydC1saWJyYXJ5LmNvbS9pbWFnZXMvNmNwb3k3OHJpLnBuZyIsIm5hbWUiOiJ0b21hczEwIiwiaWF0IjoxNjA0NjQ5NjY0fQ._s-L9-38vY1dQAQx0YN1XmtUc2K5AZCIQB7Rbpr2kJw
@userId = 5f73038aa3858fb19533f113
@friendId = 5f73038aa3858fb19533f113
@roomId = 5f743349d2048d1301677be6

### public route
GET {{domain}}health-check
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

### Logout 
POST {{domain}}logout
Authorization: Bearer {{token}}
Content-Type: {{jsonContentType}}

### Login username:password
POST {{domain}}login
Content-Type: {{jsonContentType}}

{
  "account": "horse kit1982@gmail.com",
  "password": "a12345678",
  "regId": "abcd"
}

### register user
POST {{domain}}users
Content-Type: {{jsonContentType}}

{
  "name": "edmoncddfvfv",
  "password": "a12345678",
  "account": "edmcdofvfvnd@gmail.com"
}

### find user
GET {{domain}}users/searchAccount/xxx
Content-Type: {{jsonContentType}}

### updat user
PATCH {{domain}}users
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

{
  "id": "5f881c76a196f75b4338bd83",
  "name": "edmond444"
}

### get user by id
GET {{domain}}users/{{userId}}
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

### get friends
GET {{domain}}friends?updateAt=2020-11-07%2011%3A41%3A18
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}


### invite user
POST {{domain}}friends/invite/{{friendId}}
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

### reject user
POST {{domain}}friends/reject/5f841ff158bacd2877847e70
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

### approve user
POST {{domain}}friends/approve/5f841ff158bacd2877847e70
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

### Get Messages
GET {{domain}}messages/{{roomId}}
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

### Create Message
POST {{domain}}messages/{{roomId}}
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

{
  "text": "test content",
  "image": "https://miro.medium.com/max/3760/1*OEnS6-DEn56szCwdOs2mrA.jpeg",
  "attachment": "https://ia801309.us.archive.org/5/items/HandbookOfNeuralComputingApplicationsPDFStormRG/Node.js%20Design%20Patterns%20-%20Casciaro,%20Mario%20%5BPDF%5D%5BStormRG%5D.pdf"
}

### get rooms

GET {{domain}}rooms?updateAt=2020-10-12 17:24:28.83
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}


### create event
POST {{domain}}events
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

{
  "title": "event title11",
  "logo": "https://dyl80ryjxr1ke.cloudfront.net/external_assets/hero_examples/hair_beach_v1785392215/original.jpeg",
  "publicationPlace": "台北",
  "description": "description bbb",
  "userCountMax": 10,
  "place": {
    "description": "台灣台北市中山區中山北路三段這一鍋 台北中山北殿",
    "place_id": "ChIJffB_qUWpQjQR1JJOXUMkqOw",
    "structured_formatting": {
      "main_text": "這一鍋 台北中山北殿",
      "secondary_text": "台灣台北市中山區中山北路三段"
    },
    "terms": [{
      "offset": 14,
      "value": "這一鍋 台北中山北殿"
    }, {
      "offset": 8,
      "value": "中山北路三段"
    }, {
      "offset": 5,
      "value": "中山區"
    }, {
      "offset": 2,
      "value": "台北市"
    }, {
      "offset": 0,
      "value": "台灣"
    }],
    "types": ["restaurant", "food", "point_of_interest", "establishment"]
  },
  "type": 0,
  "status": 0,
  "paymentMethod": 0,
  "budget": 100,
  "finalReviewAt" : "2020-11-06 11:23:22",
  "datingAt" : "2020-11-09 11:23:22"
}

### get events
GET {{domain}}events?updateAt=2020-11-06 11:26:34
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

### join event
POST {{domain}}events/5fa4fb65de118b078235af7c
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

### leave event
POST {{domain}}events/leave/5fa4fb65de118b078235af7c
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

###

### validate event user
POST {{domain}}events/5fa4fb65de118b078235af7c/validate/5f86c23259b73f5e40c2fed4
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

### get comments with event
GET {{domain}}events/5fa4fb65de118b078235af7c/comments?updateAt=2020-11-06 18:26:34
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}
# 2020-11-06 16:59:46
### add comment with event

POST {{domain}}events/5fa4fb65de118b078235af7c/comments
Content-Type: {{jsonContentType}}
Authorization: Bearer {{token}}

{
  "content": "test content2"
}

###